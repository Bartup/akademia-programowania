// Code generated by mockery v2.23.2. DO NOT EDIT.

package academy

import mock "github.com/stretchr/testify/mock"

// Student_Mock is an autogenerated mock type for the Student_Mock type
type Student_Mock struct {
	mock.Mock
}

// FinalGrade provides a mock function with given fields:
func (_m *Student_Mock) FinalGrade() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// Name provides a mock function with given fields:
func (_m *Student_Mock) Name() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Year provides a mock function with given fields:
func (_m *Student_Mock) Year() uint8 {
	ret := _m.Called()

	var r0 uint8
	if rf, ok := ret.Get(0).(func() uint8); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint8)
	}

	return r0
}

type mockConstructorTestingTNewStudent interface {
	mock.TestingT
	Cleanup(func())
}

// NewStudent creates a new instance of Student_Mock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewStudent(t mockConstructorTestingTNewStudent) *Student_Mock {
	mock := &Student_Mock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
